name: Deploy

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker tag to use'
        required: true
        default: 'manual'
        type: string
      skip_tests:
        description: 'Skip test suite (emergency deployments only)'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: docker.io
  IMAGE_NAME: runpod/tetra-rp

jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ !inputs.skip_tests }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Setup dependencies
        run: make setup

      - name: Run quality checks
        run: make quality-check

  docker:
    runs-on: ubuntu-latest
    needs: [test]
    if: ${{ always() && (success() || inputs.skip_tests) }}
    steps:
      - name: Clear Space
        run: |
          rm -rf /usr/share/dotnet
          rm -rf /opt/ghc
          rm -rf "/usr/local/share/boost"
          rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Setup dependencies
        run: |
          uv sync
          git submodule update --remote --merge
          cp tetra-rp/src/tetra_rp/protos/remote_execution.py .

      - name: Build and push GPU Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push CPU Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile-cpu
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-cpu:${{ inputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summary
        run: |
          echo "🚀 **Deployment Complete**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Images pushed:**" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-cpu:${{ inputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ inputs.skip_tests }}" = "true" ]; then
            echo "⚠️ **Tests were skipped** (emergency deployment)" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **All tests passed**" >> $GITHUB_STEP_SUMMARY
          fi